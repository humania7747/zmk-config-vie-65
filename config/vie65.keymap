/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        ZMK_MACRO(mc_pw,

        wait-ms = <1>;
        tap-ms = <100>;
        bindings = <&kp LS(T) &kp U &kp M &kp O &kp T &kp D &kp E &kp N &kp N1 &kp N2 &kp RET>;

        )
        
        ZMK_MACRO(

        zoom_pw,
        wait-ms = <1>;
        tap-ms = <100>;
        bindings = <&kp N6 &kp N6 &kp N7 &kp N5 &kp N8 &kp N0 &kp RET>;

        )
    };

    keymap {
        compatible = "zmk,keymap";

        Layer__0 {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BSPC |DEL|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
            // |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
&kp ESC    &kp N1           &kp N2    &kp N3  &kp N4  &kp N5  &kp N6     &kp N7  &kp N8  &kp N9     &kp N0    &kp MINUS  &kp EQUAL  &kp BSPC  &kp C_MUTE
&kp TAB    &kp LEFT_WIN     &kp W     &kp E   &kp R   &kp T   &kp Y      &kp U   &kp I   &kp O      &kp P     &kp LBKT   &kp RBKT   &kp BSLH  &out OUT_TOG
&kp CAPS   &kp A            &kp S     &kp D   &kp F   &kp G   &kp H      &kp J   &kp K   &kp L      &kp SEMI  &kp SQT    &kp RET              &kp DELETE
&kp LSHFT  &kp NON_US_HASH  &kp Z     &kp X   &kp C   &kp V   &kp B      &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &kp UP    &rgb_ug RGB_TOG
&kp LCTRL  &kp LGUI         &kp LALT                          &kp SPACE                  &kp RALT   &mo 1     &kp RCTRL  &kp LEFT   &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Layer__1 {
            bindings = <
&kp GRAVE          &kp F1            &kp F2             &kp F3           &kp F4           &kp F5        &kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12     &kp PRINTSCREEN  &kp C_PLAY_PAUSE
&rgb_ug RGB_EFF    &rgb_ug RGB_SAI   &rgb_ug RGB_BRI    &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &trans        &trans        &trans  &trans  &trans  &trans   &trans   &sys_reset  &bootloader      &kp INS
&rgb_ug RGB_EFR    &rgb_ug RGB_SAD   &rgb_ug RGB_BRD    &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &trans        &trans        &trans  &trans  &trans  &trans   &trans   &bt BT_CLR                   &kp HOME
&rgb_ug RGB_TOG    &bt BT_SEL 0      &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans   &trans   &trans      &out OUT_USB     &kp END
&ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF                                                  &out OUT_TOG                  &trans  &trans   &trans   &bt BT_PRV  &out OUT_BLE     &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };
    };
};
